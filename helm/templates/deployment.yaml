# Copyright 2023 Cisco Systems, Inc. and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "servox.fullname" . }}
  namespace: {{ include "servox.namespace" . }}
  labels:
    {{- include "servox.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "servox.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "servox.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "servox.fullname" . }}
      containers:
      - name: servo
        image: {{ include "servox.servoImage" . }}
        terminationMessagePolicy: FallbackToLogsOnError
        args:
          - 'run'
          - '--check'
        env:
        {{- if eq .Values.connectionSettingsType "static" }}
        - name: APPD_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "servox.fullname" . }}
              key: client_secret
        {{- end }}
        - name: SERVO_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: {{ include "servox.fullname" . }}
              key: log_level
        - name: POD_NAME
          valueFrom:
              fieldRef:
                fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: servo-config-volume
          mountPath: /servo/servo.yaml
          subPath: servo.yaml
          readOnly: true
        {{- if eq .Values.connectionSettingsType "sidecar" }}
        - name: agent-management-sidecar
          mountPath: /agent-management-sidecar
        {{- end }}
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
      {{- if eq .Values.connectionSettingsType "sidecar" }}
      - name: agent-management-sidecar
        image: {{ required ".Values.agentMgmtSidecarImage is required for sidecar connection settings type" .Values.agentMgmtSidecarImage }}
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
        env:
        - name: SERVICE_URL
          value: {{ default "<SERVICE_URL>" .Values.agentMgmtServiceUrlOverride }}
        - name: CLUSTER_NAME
          value: {{ default "<CLUSTER_NAME>" .Values.clusterNameOverride }}
        - name: CLIENT_TYPE
          value: {{ default "optimize:agent" .Values.agentFmmTypeOverride }}
        - name: CONFIG_FILE_PATH
          value: /agent-management-sidecar
        - name: NAME_SPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "servox.fullname" . }}
              key: OAUTH_ID
        - name: OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "servox.fullname" . }}
              key: OAUTH_SECRET
        - name: OAUTH_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "servox.fullname" . }}
              key: OAUTH_URL
        - name: OAUTH_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "servox.fullname" . }}
              key: OAUTH_TENANT_ID
        volumeMounts:
        - name: agent-management-sidecar
          mountPath: /agent-management-sidecar
      {{- end }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      volumes:
      - name: servo-config-volume
        configMap:
          name: {{ include "servox.fullname" . }}
          items:
          - key: servo.yaml
            path: servo.yaml
      {{- if eq .Values.connectionSettingsType "sidecar" }}
      - name: agent-management-sidecar
        emptyDir: {}
      {{- end }}
      # Prefer deployment onto a Node labeled role=servo
      # This ensures physical isolation and network transport if possible
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: node.opsani.com/role
                operator: In
                values:
                - servo
